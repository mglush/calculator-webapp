{"ast":null,"code":"var _jsxFileName = \"/Users/glush/IdeaProjects/calculator-webapp/calculator_frontend/src/Calculator.js\";\nimport React from 'react';\nimport CalculatorPanel from './CalculatorPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: \"\",\n      numbers: [\"\", \"\"],\n      numberIdx: 0,\n      operation: \"\"\n    };\n  }\n  operationHandler(operation) {\n    if (this.state.numberIdx === 1) {\n      this.equalHandler();\n      return;\n    }\n    if ((operation === \"subtract\" || operation === \"add\") && this.state.numbers[this.state.numberIdx] === \"\") {\n      this.numberHandler(operation === \"subtract\" ? \"-\" : \"+\");\n      return;\n    }\n    this.setOperation(operation);\n  }\n  numberHandler(number) {\n    const newNumber = this.state.numbers[this.state.numberIdx] + number;\n    this.updateNumber(newNumber);\n  }\n  dotHandler() {\n    const newNumber = this.state.numbers[this.state.numberIdx] + \".\";\n    if (isNaN(newNumber)) {\n      return;\n    }\n    this.updateNumber(newNumber);\n  }\n  clearHandler() {\n    this.setState({\n      result: \"\",\n      numbers: [\"\", \"\"],\n      numberIdx: 0\n    });\n  }\n  equalHandler() {\n    if (this.state.numbers[0] === \"\" || this.state.numbers[1] === \"\") {\n      return;\n    }\n    this.props.calculatorApi.calculate(this.state.numbers[0], this.state.numbers[1], this.state.operation, result => {\n      this.setResult(result);\n    });\n  }\n  updateNumber(newNumber) {\n    var newNumbers = this.state.numbers;\n    newNumbers[this.state.numberIdx] = newNumber;\n    this.setState({\n      result: newNumbers[this.state.numberIdx],\n      numbers: newNumbers\n    });\n  }\n  setOperation(operation) {\n    this.setState({\n      operation: operation\n    });\n    this.nextNumber();\n  }\n  nextNumber() {\n    const newIdx = this.state.numberIdx === 0 ? 1 : 0;\n    this.setState({\n      result: this.state.numbers[newIdx],\n      numberIdx: newIdx\n    });\n  }\n  setResult(result) {\n    const newNumbers = [result, \"\"];\n    const newNumberIdx = 0;\n    this.setState({\n      result: newNumbers[newNumberIdx],\n      numbers: newNumbers,\n      numberIdx: newNumberIdx,\n      operation: \"\"\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(CalculatorPanel, {\n        result: this.state.result,\n        numberClicked: this.numberHandler.bind(this),\n        operationClicked: this.operationHandler.bind(this),\n        dotClicked: this.dotHandler.bind(this),\n        equalClicked: this.equalHandler.bind(this),\n        clearClicked: this.clearHandler.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Calculator;","map":{"version":3,"names":["React","CalculatorPanel","jsxDEV","_jsxDEV","Calculator","Component","constructor","props","state","result","numbers","numberIdx","operation","operationHandler","equalHandler","numberHandler","setOperation","number","newNumber","updateNumber","dotHandler","isNaN","clearHandler","setState","calculatorApi","calculate","setResult","newNumbers","nextNumber","newIdx","newNumberIdx","render","className","children","numberClicked","bind","operationClicked","dotClicked","equalClicked","clearClicked","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/glush/IdeaProjects/calculator-webapp/calculator_frontend/src/Calculator.js"],"sourcesContent":["import React from 'react'\nimport CalculatorPanel from './CalculatorPanel'\n\nclass Calculator extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            result: \"\",\n            numbers: [\"\", \"\"],\n            numberIdx: 0,\n            operation: \"\",\n        };\n    }\n\n    operationHandler(operation) {\n        if(this.state.numberIdx === 1) {\n            this.equalHandler();\n            return;\n        }\n\n        if( (operation === \"subtract\" || operation === \"add\") &&\n            this.state.numbers[this.state.numberIdx] === \"\") {\n            this.numberHandler(operation === \"subtract\" ? \"-\" : \"+\");\n            return;\n        }\n\n        this.setOperation(operation);\n    }\n\n    numberHandler(number) {\n        const newNumber = this.state.numbers[this.state.numberIdx] + number;\n        this.updateNumber(newNumber);\n    }\n\n    dotHandler() {\n        const newNumber = this.state.numbers[this.state.numberIdx] + \".\";\n        if(isNaN(newNumber)) {\n            return\n        }\n        this.updateNumber(newNumber);\n    }\n\n    clearHandler() {\n        this.setState({\n            result: \"\",\n            numbers: [\"\", \"\"],\n            numberIdx: 0,\n        });\n    }\n\n    equalHandler() {\n        if(this.state.numbers[0] === \"\" || this.state.numbers[1] === \"\") {\n            return\n        }\n        this.props.calculatorApi.calculate(\n            this.state.numbers[0],\n            this.state.numbers[1],\n            this.state.operation,\n            (result)=> {\n                this.setResult(result);\n            });\n    }\n\n    updateNumber(newNumber) {\n        var newNumbers = this.state.numbers;\n        newNumbers[this.state.numberIdx] = newNumber;\n        this.setState({\n            result: newNumbers[this.state.numberIdx],\n            numbers: newNumbers,\n        });\n    }\n\n    setOperation(operation){\n        this.setState({operation: operation});\n        this.nextNumber();\n    }\n\n    nextNumber() {\n        const newIdx = this.state.numberIdx === 0 ? 1 : 0;\n        this.setState({\n            result: this.state.numbers[newIdx],\n            numberIdx: newIdx,\n        });\n    }\n\n    setResult(result){\n        const newNumbers = [result, \"\"];\n        const newNumberIdx = 0;\n        this.setState({\n            result: newNumbers[newNumberIdx],\n            numbers: newNumbers,\n            numberIdx: newNumberIdx,\n            operation: \"\",\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"calculator-grid-container\">\n                <CalculatorPanel\n                    result={this.state.result}\n                    numberClicked={this.numberHandler.bind(this)}\n                    operationClicked={this.operationHandler.bind(this)}\n                    dotClicked={this.dotHandler.bind(this)}\n                    equalClicked={this.equalHandler.bind(this)}\n                    clearClicked={this.clearHandler.bind(this)}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Calculator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}